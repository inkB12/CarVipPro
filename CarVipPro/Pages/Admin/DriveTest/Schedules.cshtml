@page
@model CarVipPro.APrenstationLayer.Pages.Admin.DriveTest.SchedulesModel
@{
	ViewData["Title"] = "Danh sách lịch lái thử";
	Layout = Model.MainLayout == null ? "_Layout" : Model.MainLayout;
}

<h2 class="text-xl font-semibold mb-4">🗓️ Lịch lái thử</h2>

<form method="get" class="filter-form">
	@* Choose Date *@
	<label for="FilterDate">Chọn ngày:</label>
	<input type="date" asp-for="FilterDate" class="form-control" />

	@* Choose Car Model *@
	<label for="VehicleId">Chọn xe:</label>
	<select asp-for="VehicleId" class="form-control">
		<option value="0">Tất cả xe</option>

		@foreach (var vehicle in Model.Vehicles)
		{
			<option value="@vehicle.Id">@vehicle.Model</option>
		}
	</select>

	<button type="submit" class="btn-primary">Lọc</button>
</form>

<hr style="margin: 20px 0;" />

<table class="schedule-table">
	<thead>
		<tr>
			<th>Thời gian</th>
			<th>Khách hàng</th>
			<th>Xe</th>
			<th>Trạng thái</th>
			<th>Hành động</th>
		</tr>
	</thead>
	<tbody>
		@if (Model.Schedules.Count > 0)
		{
			@foreach (var s in Model.Schedules)
			{
				<tr id="schedule-@s.Id">
					<td>
						@s.StartTime.ToString("HH:mm") - @s.EndTime.ToString("HH:mm")
						<br />
						<small class="text-muted">(@s.StartTime.ToString("dd/MM/yyyy"))</small>
					</td>
					<td>@s.CustomerName</td>
					<td>@s.VehicleModel</td>
					<td>
						<span class="status-badge @(s.Status?.ToLower())">@s.Status</span>
					</td>
					<td>
						<a asp-page="/Admin/DriveTest/EditSchedule"
						   asp-route-scheduleId="@s.Id"
						   class="btn-edit">
							✏️ Chỉnh sửa
						</a>
					</td>
				</tr>
			}
		}
		else
		{
			<tr>
				<td colspan="4" class="text-center">
					Không có lịch lái thử nào được tìm thấy.
				</td>
			</tr>
		}
	</tbody>
</table>

@section Scripts {

	<style>
		/* Style chung cho bảng lịch lái thử */
		/* Style chung cho bảng lịch lái thử */
		.schedule-table {
			width: 100%;
			border-collapse: separate;
			border-spacing: 0;
			margin-top: 20px;
			background: var(--bg-card); /* ⬅️ Sử dụng màu nền tối */
			border: 1px solid #334155; /* Viền tối hơn */
			border-radius: 8px;
			overflow: hidden;
			box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
		}

			.schedule-table th {
				background-color: rgba(99, 102, 241, 0.2); /* Màu nền header khớp với _LayoutAdmin */
				color: #c7d2fe; /* Màu chữ header khớp với _LayoutAdmin */
				padding: 12px 15px;
				text-align: left;
				font-weight: 600;
			}

			.schedule-table td {
				padding: 12px 15px;
				border-bottom: 1px solid #334155; /* Viền tối hơn */
				vertical-align: middle;
			}

			.schedule-table tbody tr:hover td {
				background-color: rgba(255, 255, 255, 0.05); /* Hiệu ứng hover khớp với _LayoutAdmin */
				transition: background 0.2s ease;
			}

		/* Style cho form lọc */
		.filter-form {
			display: flex;
			gap: 15px;
			align-items: center;
			padding: 15px;
			border: 1px solid #334155; /* Viền tối hơn */
			border-radius: 6px;
			background-color: var(--bg-card); /* ⬅️ Sử dụng màu nền tối */
		}

			.filter-form .form-control {
				padding: 8px;
				border: 1px solid #ced4da;
				border-radius: 4px;
			}

			.filter-form .btn-primary {
				background-color: #007bff;
				color: white;
				border: none;
				padding: 8px 15px;
				border-radius: 4px;
				cursor: pointer;
			}
	</style>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
	<script>
		// 1. Create connection to hub
		var connection = new signalR.HubConnectionBuilder()
			.withUrl("/hubs/notify")
			.withAutomaticReconnect()
			.build();

		// 2. Choose what function to call
		connection.on("ReceiveScheduleUpdate", function(data){
			console.log("Dữ liệu cập nhật từ Server:", data);

			// Logic Update
			const scheduleId = data.id;

			const oldRow = document.getElementById(`schedule-${scheduleId}`)

			const partialUrl = `/Admin/DriveTest/Schedules?handler=ScheduleRowPartial&scheduleId=${scheduleId}`;

			if (oldRow){
				fetch(partialUrl)
				// Chuyển phản hồi thành chuỗi HTML
				.then(response => response.text())
				.then(newRowHtml => {
					// .outerHTML sẽ thay thế toàn bộ phần tử (bao gồm thẻ <tr>) bằng HTML mới
					 oldRow.outerHTML = newRowHtml;
				})
				.catch(error => console.error('Lỗi khi tải Partial View:', error));
			}
			else
			{
				// Hàng không tồn tại: Thông báo cho người dùng
				console.log(`Lịch ID ${scheduleId} không có trên bảng lọc hiện tại.`);
			}
		});

		// 3. Start to connect
		connection.start()
			.then(function(){
				console.log("Kết nối SignalR thành công.");

				// Access to group
				connection.invoke("JoinScheduleUpdates").catch(function (err){
					return console.error(err.toString());
				});
			})
			.catch(function (err) {
				console.error("Lỗi kết nối SignalR:", err.toString());
			});
	</script>
}